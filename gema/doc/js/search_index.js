var search_data = {"index":{"searchIndex":["alimentos","calculadora","efenergetica","eficplato","gema","error","list","menudsl","object","plato","platodsl","<<()","<=>()","<=>()","alimento()","clear()","componente()","each()","each()","geianual()","geidiario()","geitotal()","huellanut()","impactoambientalgei()","impactoambientalterreno()","insert()","new()","new()","new()","new()","new()","new()","new()","new()","phidratos()","plipidos()","pproteina()","platos()","pop()","shift()","terrenoanual()","terrenototal()","to_s()","to_s()","to_s()","to_s()","totalgramos()","totalhidratos()","totallipidos()","totalproteina()","unshift()","vcalorico()","valorkilocalorico()","gemfile","gemfile.lock","guardfile","rakefile","setup","gema.gemspec"],"longSearchIndex":["alimentos","calculadora","efenergetica","eficplato","gema","gema::error","list","menudsl","object","plato","platodsl","list#<<()","alimentos#<=>()","eficplato#<=>()","platodsl#alimento()","plato#clear()","menudsl#componente()","eficplato#each()","list#each()","list#geianual()","list#geidiario()","eficplato#geitotal()","eficplato#huellanut()","calculadora#impactoambientalgei()","calculadora#impactoambientalterreno()","list#insert()","alimentos::new()","calculadora::new()","efenergetica::new()","eficplato::new()","list::new()","menudsl::new()","plato::new()","platodsl::new()","plato#phidratos()","plato#plipidos()","plato#pproteina()","plato#platos()","list#pop()","list#shift()","list#terrenoanual()","eficplato#terrenototal()","alimentos#to_s()","menudsl#to_s()","plato#to_s()","platodsl#to_s()","plato#totalgramos()","plato#totalhidratos()","plato#totallipidos()","plato#totalproteina()","list#unshift()","plato#vcalorico()","calculadora#valorkilocalorico()","","","","","",""],"info":[["Alimentos","","Alimentos.html","","<p>Clase que contiene la informacion nutricional de los alimentos, incluye\nComparable\n"],["Calculadora","","Calculadora.html","","<p>Clase encargada de calcular diferentes valores de impacto de los alimentos\n"],["EfEnergetica","","EfEnergetica.html","","<p>Clase hija de alimentos que contiene la eficiencia del alimento, incluye\nComparable\n"],["EficPlato","","EficPlato.html","","<p>Clase hija de plato que calucla la eficiencia del menu, incluye comparable\ny enumerable\n"],["Gema","","Gema.html","",""],["Gema::Error","","Gema/Error.html","",""],["List","","List.html","","<p>Clase Lista usada como una lista doblemente enlazada, incluye Enumerable\n"],["MenuDSL","","MenuDSL.html","",""],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>Clase plato que representa un menu con varios alimentos\n"],["PlatoDSL","","PlatoDSL.html","",""],["<<","List","List.html#method-i-3C-3C","(val)","<p>Introduce un valor en la lista\n"],["<=>","Alimentos","Alimentos.html#method-i-3C-3D-3E","(otro)","<p>Condicion de comparacion entre varios alimentos\n"],["<=>","EficPlato","EficPlato.html#method-i-3C-3D-3E","(otro)","<p>Establece la condicion de comparacion con otra instancia de la misma clase\n"],["alimento","PlatoDSL","PlatoDSL.html#method-i-alimento","(informacion = {})",""],["clear","Plato","Plato.html#method-i-clear","()","<p>Vacia el menu\n"],["componente","MenuDSL","MenuDSL.html#method-i-componente","(bloque = {})",""],["each","EficPlato","EficPlato.html#method-i-each","()","<p>Recorre el menu\n"],["each","List","List.html#method-i-each","()","<p>Recorre la lista\n"],["geiAnual","List","List.html#method-i-geiAnual","()","<p>Calcula los gases anuales de toda la comida de la lista\n"],["geiDiario","List","List.html#method-i-geiDiario","()","<p>Calcula los gases diarios de toda la comida de la lista\n"],["geiTotal","EficPlato","EficPlato.html#method-i-geiTotal","()","<p>Calcula el gei total del menu\n"],["huellaNut","EficPlato","EficPlato.html#method-i-huellaNut","()","<p>Metodo funcional que calula la huella nutricional\n"],["impactoAmbientalGEI","Calculadora","Calculadora.html#method-i-impactoAmbientalGEI","(menu)","<p>Calcula el impacto ambiental de los gases emitidos de una comida\n"],["impactoAmbientalTerreno","Calculadora","Calculadora.html#method-i-impactoAmbientalTerreno","(menu)","<p>Calcula el impacto ambiental del terreno de una comida\n"],["insert","List","List.html#method-i-insert","(pos, *arg)","<p>Inserta un valor en cualquier posicion de la lista\n"],["new","Alimentos","Alimentos.html#method-c-new","(nombre, proteinas, carbohidratos, lipidos, gei, terreno, gramos)","<p>Metodo inicializacion que se encarga de crear el objeto alimento y dar\nvalores a los atributos\n"],["new","Calculadora","Calculadora.html#method-c-new","()","<p>Crea una instancia, no necesita de ningun valor\n"],["new","EfEnergetica","EfEnergetica.html#method-c-new","(nombre, proteinas, carbohidratos, lipidos, gei, terreno, eficiencia)","<p>Contstructor encargado de dar los valores a los atributos\n"],["new","EficPlato","EficPlato.html#method-c-new","(nombre, platos)","<p>Metodo inicializador que recibe el nombre del menu y el menu y declara\nmetodos funcionales\n"],["new","List","List.html#method-c-new","()","<p>Metodo que inicializa la lista a tamaño cero\n"],["new","MenuDSL","MenuDSL.html#method-c-new","(name, &block)",""],["new","Plato","Plato.html#method-c-new","(nombre, platos)","<p>Metodo inicializador que recibe el menu y el nombre de dicho menu\n"],["new","PlatoDSL","PlatoDSL.html#method-c-new","(name, &block)",""],["pHidratos","Plato","Plato.html#method-i-pHidratos","()","<p>Calcula el porcentaje de hidratos del menu\n"],["pLipidos","Plato","Plato.html#method-i-pLipidos","()","<p>Calcula el porcentaje de lipidos del menu\n"],["pProteina","Plato","Plato.html#method-i-pProteina","()","<p>Calcula el porcentaje de proteinas del menu\n"],["platos","Plato","Plato.html#method-i-platos","()","<p>Devuelve el objeto lista donde se almacenan los platos\n"],["pop","List","List.html#method-i-pop","(n = 1)","<p>Elimina el ultimo dato de la lista\n"],["shift","List","List.html#method-i-shift","(n = 1)","<p>Elimina el primer dato de la lista\n"],["terrenoAnual","List","List.html#method-i-terrenoAnual","()","<p>Calcula el terreno anual de toda la comida de la lista\n"],["terrenoTotal","EficPlato","EficPlato.html#method-i-terrenoTotal","()","<p>Calcula el terreno total del menu\n"],["to_s","Alimentos","Alimentos.html#method-i-to_s","()","<p>Definicion metodo to_s, devuelve el nombre del alimento\n"],["to_s","MenuDSL","MenuDSL.html#method-i-to_s","()",""],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Metodo to_s que devuelve los nombres de los alimentos del menu\n"],["to_s","PlatoDSL","PlatoDSL.html#method-i-to_s","()",""],["totalGramos","Plato","Plato.html#method-i-totalGramos","()","<p>Calcula el total de gramos del menu\n"],["totalHidratos","Plato","Plato.html#method-i-totalHidratos","()","<p>Calcula el total de hidratos del menu\n"],["totalLipidos","Plato","Plato.html#method-i-totalLipidos","()","<p>Calcula el total de lipidos del menu\n"],["totalProteina","Plato","Plato.html#method-i-totalProteina","()","<p>Calcula el total de proteinas del menu\n"],["unshift","List","List.html#method-i-unshift","(val)","<p>Añade un dato al principio de la lista\n"],["vCalorico","Plato","Plato.html#method-i-vCalorico","()","<p>Calcula el valor calorico del menu\n"],["valorKiloCalorico","Calculadora","Calculadora.html#method-i-valorKiloCalorico","(comida)","<p>Calcula el valor kilo calorico de una comida\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in gema.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  gema (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["gema.gemspec","","gema_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) …\n"]]}}